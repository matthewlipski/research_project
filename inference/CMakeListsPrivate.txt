# !!! WARNING !!! AUTO-GENERATED FILE, PLEASE DO NOT MODIFY IT AND USE
# https://docs.platformio.org/page/projectconf/section_env_build.html#build-flags
#
# If you need to override existing CMake configuration or add extra,
# please create `CMakeListsUser.txt` in the root of project.
# The `CMakeListsUser.txt` will not be overwritten by PlatformIO.



set(CMAKE_CONFIGURATION_TYPES "nano33ble" CACHE STRING "Build Types reflect PlatformIO Environments" FORCE)

# Convert "Home Directory" that may contain unescaped backslashes on Windows
file(TO_CMAKE_PATH $ENV{HOMEDRIVE}$ENV{HOMEPATH} ENV_HOME_PATH)

set(CLION_SVD_FILE_PATH "${ENV_HOME_PATH}/.platformio/platforms/nordicnrf52/misc/svd/nrf52840.svd" CACHE FILEPATH "Peripheral Registers Definitions File" FORCE)

SET(CMAKE_C_COMPILER "${ENV_HOME_PATH}/.platformio/packages/toolchain-gccarmnoneeabi/bin/arm-none-eabi-gcc.exe")
SET(CMAKE_CXX_COMPILER "${ENV_HOME_PATH}/.platformio/packages/toolchain-gccarmnoneeabi/bin/arm-none-eabi-g++.exe")
SET(CMAKE_CXX_FLAGS "-Wvla -fno-rtti -std=gnu++14 -DAPPLICATION_ADDR=0x10000 -DAPPLICATION_SIZE=0xf0000 -DMBED_RAM_SIZE=0x40000 -DMBED_RAM_START=0x20000000 -DMBED_ROM_SIZE=0x100000 -DMBED_ROM_START=0x0 -DMBED_TRAP_ERRORS_ENABLED=1 -Os -Wall -Wextra -Wno-missing-field-initializers -Wno-unused-parameter -c -fdata-sections -ffunction-sections -fmessage-length=0 -fno-exceptions -fomit-frame-pointer -funsigned-char -mcpu=cortex-m4 -mfloat-abi=softfp -mfpu=fpv4-sp-d16 -mthumb -iprefix${ENV_HOME_PATH}/.platformio/packages/framework-arduino-mbed/cores/arduino @${ENV_HOME_PATH}/.platformio/packages/framework-arduino-mbed/variants/ARDUINO_NANO33BLE/includes.txt -nostdlib")
SET(CMAKE_C_FLAGS "-std=gnu11 -DAPPLICATION_ADDR=0x10000 -DAPPLICATION_SIZE=0xf0000 -DMBED_RAM_SIZE=0x40000 -DMBED_RAM_START=0x20000000 -DMBED_ROM_SIZE=0x100000 -DMBED_ROM_START=0x0 -DMBED_TRAP_ERRORS_ENABLED=1 -Os -Wall -Wextra -Wno-missing-field-initializers -Wno-unused-parameter -c -fdata-sections -ffunction-sections -fmessage-length=0 -fno-exceptions -fomit-frame-pointer -funsigned-char -mcpu=cortex-m4 -mfloat-abi=softfp -mfpu=fpv4-sp-d16 -mthumb -iprefix${ENV_HOME_PATH}/.platformio/packages/framework-arduino-mbed/cores/arduino @${ENV_HOME_PATH}/.platformio/packages/framework-arduino-mbed/variants/ARDUINO_NANO33BLE/includes.txt -nostdlib")

SET(CMAKE_C_STANDARD 11)
set(CMAKE_CXX_STANDARD 14)

if (CMAKE_BUILD_TYPE MATCHES "nano33ble")
    add_definitions(-DPLATFORMIO=50205)
    add_definitions(-DARDUINO_ARDUINO_NANO33BLE)
    add_definitions(-DARDUINO_ARCH_NRF52840)
    add_definitions(-DARM_MATH_CM4)
    add_definitions(-DBOARD_PCA10056)
    add_definitions(-D__CMSIS_RTOS)
    add_definitions(-DCMSIS_VECTAB_VIRTUAL)
    add_definitions(-DCMSIS_VECTAB_VIRTUAL_HEADER_FILE=\"cmsis_nvic.h\")
    add_definitions(-DCOMPONENT_FLASHIAP=1)
    add_definitions(-DCONFIG_GPIO_AS_PINRESET)
    add_definitions(-D__CORTEX_M4)
    add_definitions(-DDEVICE_ANALOGIN=1)
    add_definitions(-DDEVICE_FLASH=1)
    add_definitions(-DDEVICE_I2C=1)
    add_definitions(-DDEVICE_I2C_ASYNCH=1)
    add_definitions(-DDEVICE_I2CSLAVE=1)
    add_definitions(-DDEVICE_INTERRUPTIN=1)
    add_definitions(-DDEVICE_LPTICKER=1)
    add_definitions(-DDEVICE_PORTIN=1)
    add_definitions(-DDEVICE_PORTINOUT=1)
    add_definitions(-DDEVICE_PORTOUT=1)
    add_definitions(-DDEVICE_PWMOUT=1)
    add_definitions(-DDEVICE_SERIAL=1)
    add_definitions(-DDEVICE_SERIAL_ASYNCH=1)
    add_definitions(-DDEVICE_SERIAL_FC=1)
    add_definitions(-DDEVICE_SLEEP=1)
    add_definitions(-DDEVICE_SPI=1)
    add_definitions(-DDEVICE_SPI_ASYNCH=1)
    add_definitions(-DDEVICE_SYSTICK_CLK_OFF_DURING_SLEEP=1)
    add_definitions(-DDEVICE_TRNG=1)
    add_definitions(-DDEVICE_USBDEVICE=1)
    add_definitions(-DDEVICE_USTICKER=1)
    add_definitions(-DFEATURE_BLE=1)
    add_definitions(-DFEATURE_CRYPTOCELL310=1)
    add_definitions(-DFEATURE_STORAGE=1)
    add_definitions(-D__FPU_PRESENT=1)
    add_definitions(-D__MBED__=1)
    add_definitions(-DMBED_BUILD_TIMESTAMP=1648633245.220674)
    add_definitions(-D__MBED_CMSIS_RTOS_CM)
    add_definitions(-DMBED_MPU_CUSTOM)
    add_definitions(-DMBED_TICKLESS)
    add_definitions(-DMBEDTLS_CONFIG_HW_SUPPORT)
    add_definitions(-DNRF52840_XXAA)
    add_definitions(-DNRF52_PAN_20)
    add_definitions(-DSWI_DISABLE0)
    add_definitions(-DTARGET_ARDUINO_NANO33BLE)
    add_definitions(-DTARGET_CORDIO)
    add_definitions(-DTARGET_CORDIO_LL)
    add_definitions(-DTARGET_CORTEX)
    add_definitions(-DTARGET_CORTEX_M)
    add_definitions(-DTARGET_LIKE_CORTEX_M4)
    add_definitions(-DTARGET_LIKE_MBED)
    add_definitions(-DTARGET_M4)
    add_definitions(-DTARGET_MCU_NRF52840)
    add_definitions(-DTARGET_NAME=ARDUINO_NANO33BLE)
    add_definitions(-DTARGET_NORDIC)
    add_definitions(-DTARGET_NORDIC_CORDIO)
    add_definitions(-DTARGET_NRF52)
    add_definitions(-DTARGET_NRF52840)
    add_definitions(-DTARGET_NRF5x)
    add_definitions(-DTARGET_RELEASE)
    add_definitions(-DTARGET_RTOS_M4_M7)
    add_definitions(-DTARGET_SDK_15_0)
    add_definitions(-DTARGET_SOFTDEVICE_NONE)
    add_definitions(-DTOOLCHAIN_GCC)
    add_definitions(-DTOOLCHAIN_GCC_ARM)
    add_definitions(-DWSF_MAX_HANDLERS=10)
    add_definitions(-DMBED_NO_GLOBAL_USING_DIRECTIVE=1)
    add_definitions(-DCORE_MAJOR=3)
    add_definitions(-DCORE_MINOR=0)
    add_definitions(-DCORE_PATCH=1)
    add_definitions(-DUSE_ARDUINO_PINOUT)
    add_definitions(-DARDUINO=10810)
    add_definitions(-DARDUINO_ARCH_MBED)

    include_directories("${CMAKE_CURRENT_LIST_DIR}/include")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduino-mbed/cores/arduino")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduino-mbed/cores/arduino/api/deprecated")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduino-mbed/cores/arduino/api/deprecated-avr-comp")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduino-mbed/variants/ARDUINO_NANO33BLE")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduino-mbed/libraries/Camera/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduino-mbed/libraries/Ethernet/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduino-mbed/libraries/GC2145")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduino-mbed/libraries/GPS/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduino-mbed/libraries/GSM/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduino-mbed/libraries/Himax_HM01B0")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduino-mbed/libraries/KernelDebug/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduino-mbed/libraries/MCUboot/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduino-mbed/libraries/MRI/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduino-mbed/libraries/Nano33BLE_System/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduino-mbed/libraries/Nicla_System/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduino-mbed/libraries/PDM/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduino-mbed/libraries/Portenta_Audio/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduino-mbed/libraries/Portenta_SDCARD/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduino-mbed/libraries/Portenta_SDRAM/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduino-mbed/libraries/Portenta_Video/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduino-mbed/libraries/Portenta_lvgl/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduino-mbed/libraries/RPC/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduino-mbed/libraries/SE05X/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduino-mbed/libraries/SFU/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduino-mbed/libraries/SPI")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduino-mbed/libraries/STM32H747_System/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduino-mbed/libraries/Scheduler/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduino-mbed/libraries/SocketWrapper/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduino-mbed/libraries/ThreadDebug/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduino-mbed/libraries/USBAudio")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduino-mbed/libraries/USBHID/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduino-mbed/libraries/USBHOST/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduino-mbed/libraries/USBMSD/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduino-mbed/libraries/WiFi/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduino-mbed/libraries/Wire")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduino-mbed/libraries/doom/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduino-mbed/libraries/ea_malloc")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduino-mbed/libraries/mbed-memory-status")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduino-mbed/libraries/openamp_arduino/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/framework-arduino-mbed/libraries/rpclib/src")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include/c++/8.2.1")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include/c++/8.2.1/arm-none-eabi")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/toolchain-gccarmnoneeabi/lib/gcc/arm-none-eabi/8.2.1/include")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/toolchain-gccarmnoneeabi/lib/gcc/arm-none-eabi/8.2.1/include-fixed")
    include_directories("${ENV_HOME_PATH}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include")

    FILE(GLOB_RECURSE EXTRA_LIB_SOURCES
        ${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/nano33ble/*.*
    )
endif()


FILE(GLOB_RECURSE SRC_LIST
    ${CMAKE_CURRENT_LIST_DIR}/src/*.*
    ${CMAKE_CURRENT_LIST_DIR}/lib/*.*
    ${CMAKE_CURRENT_LIST_DIR}/test/*.*
)

list(APPEND SRC_LIST ${EXTRA_LIB_SOURCES})
